/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lojafloricultura.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lojafloricultura.controller.ClienteController;

/**
 *
 * @author Família
 */
public class ClienteView extends javax.swing.JFrame {

    /**
     * Creates new form ClienteView
     */
    public ClienteView() {
        initComponents();
        
        this.setExtendedState(MAXIMIZED_BOTH);
        lblID.setVisible(false);
        LoadTable();
    }
    
    /**
     * 
     * Método auxiliar para desabilitar formulario
     * 
     * @author lukas.fialho, Italo
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    public void DesabilitaFormulario()
    {
        txtNomeCliente.setEditable(false);
        txtCpfCliente.setEditable(false);
        txtEmail.setEditable(false);
        txtEndereco.setEditable(false);
        txtNumero.setEditable(false);
        txtComplemento.setEditable(false);
        rboMasculino.setSelected(false);
        rboFeminino.setSelected(false);
        cboEstadoCivil.setEditable(false);
        txtDataNasc.setEditable(false);
        txtTelefone.setEditable(false);
        
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);
    }
    
    /**
     * 
     * Método auxiliar para habilitar formulario
     * 
     * @author lukas.fialho, Italo
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    public void HabilitaFormulario()
    {
        txtNomeCliente.setEditable(true);
        txtCpfCliente.setEditable(true);
        txtEmail.setEditable(true);
        txtEndereco.setEditable(true);
        txtNumero.setEditable(true);
        txtComplemento.setEditable(true);
        rboMasculino.setSelected(true);
        rboFeminino.setSelected(true);
        cboEstadoCivil.setEditable(true);
        txtDataNasc.setEditable(true);
        txtTelefone.setEditable(true);
        
        btnSave.setEnabled(true);
        btnCancel.setEnabled(true);
    }
    
    /**
     * 
     * Método auxiliar para limpar formulario
     * 
     * @author lukas.fialho, Italo
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    public void LimpaFormulario()
    {
        txtNomeCliente.setText("");
        txtCpfCliente.setText("");
        txtEmail.setText("");
        txtEndereco.setText("");
        txtNumero.setText("");
        txtComplemento.setText("");
//        rboMasculino.setSelected(true);
//        rboFeminino.setSelected(true);
//        cboEstadoCivil.setEditable(true);
        txtDataNasc.setText("");
        txtTelefone.setText("");
    }
    
    /**
     * 
     * Método para buscar e preencher tabela de Clientes
     * 
     * @author lukas.fialho, Italo
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    public void LoadTable(){
        
        ArrayList<String[]> linhasClientes = ClienteController.getClientes();
        
        
        DefaultTableModel tmClientes = new DefaultTableModel();
        tmClientes.addColumn("ID");
        tmClientes.addColumn("Nome");
        tmClientes.addColumn("CPF");
        tmClientes.addColumn("Email");
        tmClientes.addColumn("Endereço");
        tmClientes.addColumn("Número");
        tmClientes.addColumn("Complemento");
        tmClientes.addColumn("Sexo");
        tmClientes.addColumn("Estado Civil");
        tmClientes.addColumn("Data de Nascimento");
        tmClientes.addColumn("Telefone");
        tblClientes.setModel(tmClientes);
        
       
       // tblClientes.removeColumn(tblClientes.getColumnModel().getColumn(0));
        
      
        for(String[] p:linhasClientes){
            tmClientes.addRow(p);
        }
       
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(300);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(100);
        
        LimpaFormulario();
        DesabilitaFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgSexo = new javax.swing.ButtonGroup();
        pnlCliente = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lblCPF = new javax.swing.JLabel();
        txtCpfCliente = new javax.swing.JFormattedTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtComplemento = new javax.swing.JTextField();
        lblComplemento = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblEstadoCivil = new javax.swing.JLabel();
        lblDataNasc = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        cboEstadoCivil = new javax.swing.JComboBox<>();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtDataNasc = new javax.swing.JFormattedTextField();
        lblID = new javax.swing.JLabel();
        rboMasculino = new javax.swing.JRadioButton();
        rboFeminino = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnNewCliente = new javax.swing.JButton();
        btnEditCliente = new javax.swing.JButton();
        btnDeleteCliente = new javax.swing.JButton();
        pnlCliente1 = new javax.swing.JPanel();
        lblNome1 = new javax.swing.JLabel();
        btnSearchClietne = new javax.swing.JButton();
        txtCpfSearchCliente = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        lblNome.setText(" Nome *");

        txtNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteActionPerformed(evt);
            }
        });

        lblCPF.setText("CPF *");

        try {
            txtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCpfClienteKeyTyped(evt);
            }
        });

        btnSave.setText("Salvar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblEmail.setText("E-mail ");

        lblEndereco.setText(" Endereço *");

        lblNumero.setText("Número *");

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });

        lblComplemento.setText("Complemento");

        lblSexo.setText(" Sexo *");

        lblEstadoCivil.setText("Estado Civil");

        lblDataNasc.setText("Data de Nascimento *");

        lblTelefone.setText(" Telefone *");

        cboEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solteiro", "Casado", "Separado", "Divorciado", "Viúvo" }));

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyTyped(evt);
            }
        });

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNasc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDataNascKeyTyped(evt);
            }
        });

        lblID.setText("lblID");

        btgSexo.add(rboMasculino);
        rboMasculino.setText("Masculino");
        rboMasculino.setActionCommand("Masculino");

        btgSexo.add(rboFeminino);
        rboFeminino.setText("Feminino");
        rboFeminino.setActionCommand("Feminino");

        javax.swing.GroupLayout pnlClienteLayout = new javax.swing.GroupLayout(pnlCliente);
        pnlCliente.setLayout(pnlClienteLayout);
        pnlClienteLayout.setHorizontalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(lblSexo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rboMasculino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rboFeminino)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblComplemento)
                    .addComponent(lblCPF)
                    .addComponent(lblNome)
                    .addComponent(lblEmail)
                    .addComponent(lblEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNomeCliente)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCpfCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTelefone, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDataNasc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEstadoCivil, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                .addComponent(txtDataNasc))
                            .addComponent(cboEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addComponent(lblID)
                        .addContainerGap())
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlClienteLayout.createSequentialGroup()
                                .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblNumero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlClienteLayout.setVerticalGroup(
            pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteLayout.createSequentialGroup()
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEstadoCivil)
                            .addComponent(cboEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblID))
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCPF)
                            .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlClienteLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDataNasc)
                            .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelefone)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndereco)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumero)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComplemento)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSexo)
                    .addComponent(rboMasculino)
                    .addComponent(rboFeminino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(pnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "Email", "Endereço", "Número", "Complemento", "Sexo", "Estado Civil", "Data de Nascimento", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblClientes);
        if (tblClientes.getColumnModel().getColumnCount() > 0) {
            tblClientes.getColumnModel().getColumn(3).setResizable(false);
        }

        btnNewCliente.setText("Novo");
        btnNewCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewClienteActionPerformed(evt);
            }
        });

        btnEditCliente.setText("Editar");
        btnEditCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditClienteActionPerformed(evt);
            }
        });

        btnDeleteCliente.setText("Excluir");
        btnDeleteCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteClienteActionPerformed(evt);
            }
        });

        pnlCliente1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        lblNome1.setText("CPF:");

        btnSearchClietne.setText("Buscar");
        btnSearchClietne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchClietneActionPerformed(evt);
            }
        });
        btnSearchClietne.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btnSearchClietneKeyTyped(evt);
            }
        });

        try {
            txtCpfSearchCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfSearchCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCpfSearchClienteKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlCliente1Layout = new javax.swing.GroupLayout(pnlCliente1);
        pnlCliente1.setLayout(pnlCliente1Layout);
        pnlCliente1Layout.setHorizontalGroup(
            pnlCliente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCliente1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblNome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCpfSearchCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearchClietne, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        pnlCliente1Layout.setVerticalGroup(
            pnlCliente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCliente1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCliente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome1)
                    .addComponent(btnSearchClietne, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtCpfSearchCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                    .addComponent(pnlCliente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnNewCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(pnlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(pnlCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * Essa funcao deleta o Cliente selecionado na tabela
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento de Delete
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnDeleteClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteClienteActionPerformed
        if(tblClientes.getRowCount()>0)
        {
            //Resgato o número da linha pelo JTable
            int numeroLinha = tblClientes.getSelectedRow();
            
           
            int ID= Integer.parseInt(tblClientes.getModel().getValueAt(numeroLinha, 0).toString());
            
           
            if(ClienteController.excluir( ID ))
            {
                this.LoadTable();
                JOptionPane.showMessageDialog(this,"Cliente excluído da base de dados");
            }else{
                JOptionPane.showMessageDialog(this,"Falha ao excluir o cliente!");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Não há clientes para excluir!");
        }
    }//GEN-LAST:event_btnDeleteClienteActionPerformed

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    /**
     * 
     * M[etodo para salvar as informações de um novo Cliente
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(ClienteController.salvar(txtNomeCliente.getText(), txtCpfCliente.getText().replace("-", "").replace(".", ""), 
                txtEmail.getText(), txtEndereco.getText(), txtNumero.getText(), 
                txtComplemento.getText(),btgSexo.getSelection().getActionCommand(), 
                cboEstadoCivil.getSelectedItem().toString(), txtDataNasc.getText().replace("/", ""),
                txtTelefone.getText().replace("(", "").replace(")", "").replace("-", "")))
        {
                    
                this.LoadTable();

                JOptionPane.showMessageDialog(null,"Cliente cadastrado com sucesso");
            LimpaFormulario();
        }else{
            JOptionPane.showMessageDialog(null,"Falha ao cadastrar cliente");
        }
        DesabilitaFormulario();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    /**
     * 
     * Botão para adicionar um novo Cliente
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnNewClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewClienteActionPerformed
        // Habilita e Limpa o formulário de Cliente
        HabilitaFormulario();
        LimpaFormulario();
    }//GEN-LAST:event_btnNewClienteActionPerformed

    /**
     * 
     * Botão para cancelar a inserção de um novo Cliente
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // Desabilita e Limpa o formulário de Cliente
        DesabilitaFormulario();
        LimpaFormulario();
    }//GEN-LAST:event_btnCancelActionPerformed
    
    /**
     * 
     * Botão para pesquisar um Cliente por CPF
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnSearchClietneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchClietneActionPerformed
        try {
            if (!this.txtCpfSearchCliente.getText().equalsIgnoreCase("")) {
                if (this.txtCpfCliente.getText().length() < 11) {
                    JOptionPane.showMessageDialog(this, "Digite um CPF válido!");
                } else {
                    ArrayList<String[]> clientes = ClienteController.getClienteByCPF(txtCpfSearchCliente.getText());
            
                    DefaultTableModel tmProdutos = new DefaultTableModel();
                    tmProdutos.addColumn("ID");
                    tmProdutos.addColumn("Nome");
                    tmProdutos.addColumn("CPF");
                    tmProdutos.addColumn("Email");
                    tmProdutos.addColumn("Endereço");
                    tmProdutos.addColumn("Número");
                    tmProdutos.addColumn("Complemento");
                    tmProdutos.addColumn("Sexo");
                    tmProdutos.addColumn("Estado Civil");
                    tmProdutos.addColumn("Data de Nascimento");
                    tmProdutos.addColumn("Telefone");

                    tblClientes.setModel(tmProdutos);

                    for(String[] p:clientes){
                        tmProdutos.addRow(p);
                    }
                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ProdutoView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchClietneActionPerformed

    /**
     * 
     * Método para editar as informações de um Cliente
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnEditClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditClienteActionPerformed
        if(tblClientes.getRowCount()>0)
        {
            //Verifico se o usuário selecionou alguma linha (Primeira linha = 0)
            if(tblClientes.getSelectedRow()>=0)
            {
                HabilitaFormulario();
                
                //Atribuo os valores que estão na linha selecionada para a tabela
                lblID.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 0).toString());
                txtNomeCliente.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 1).toString());
                txtCpfCliente.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 2).toString());
                txtEndereco.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 3).toString());
                txtNumero.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 4).toString());
                txtComplemento.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 5).toString());
                cboEstadoCivil.setActionCommand(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 6).toString());
                txtDataNasc.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 7).toString());
                txtTelefone.setText(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 8).toString());
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Selecione um cliente para editar!");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Não há clientes para editar!");
        }
    }//GEN-LAST:event_btnEditClienteActionPerformed

    /**
     * 
     * Evento KeyTyped para o campo CPF
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void txtCpfClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfClienteKeyTyped
        String numeros = "0123456789";
        
        if(!numeros.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_txtCpfClienteKeyTyped

    /**
     * 
     * Evento KeyTyped para o campo Data de Nascimento
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void txtDataNascKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataNascKeyTyped
        String numeros = "0123456789";
        
        if(!numeros.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_txtDataNascKeyTyped

    /**
     * 
     * Evento KeyTyped para o campo Telefone
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void txtTelefoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyTyped
        String numeros = "0123456789";
        
        if(!numeros.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefoneKeyTyped

    private void txtCpfSearchClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfSearchClienteKeyTyped
        String numeros = "0123456789";
        
        if(!numeros.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_txtCpfSearchClienteKeyTyped
    
    /**
     * 
     * Evento KeyTyped para o campo CPF para buscar clientes
     * 
     * @author lukas.fialho, Italo
     * @param evt - Evento do Botão
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private void btnSearchClietneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSearchClietneKeyTyped
        String numeros = "0123456789";
        
        if(!numeros.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_btnSearchClietneKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteView().setVisible(true);
            }
        });
    }
    
    /**
     * 
     * Essa funcao valida cada um dos campos do formulario quando o evento Salvar é ativado
     * 
     * @author lukas.fialho, Italo
     * @return void
     * @version 1.0
     * @since 18 de Novembro (Javadoc)
    */
    private boolean ValidarFormulario() {
        //Nome obrigatório
        if(this.txtNomeCliente.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Digite um nome para o Cliente!");
            return false;
        }
        
        //CPF obrigatório
        if(this.txtCpfCliente.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Campo CPF obrigatório para clientes!");
            return false;
        }
        
        //CPF válido com 11 digítos
        if(this.txtCpfCliente.getText().length() < 11){
            JOptionPane.showMessageDialog(this, "Digite um CPF válido!");
            return false;
        }
        
        //Endereço e Número obrigatórios 
        if(this.txtEndereco.getText().equalsIgnoreCase("") || this.txtNumero.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Campo endereço e número obrigatórios para cliente!");
            return false;
        }
        
        //Data de Nasmineto obrigatório
        if(this.txtDataNasc.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Campo endereço e número obrigatórios para cliente!");
            return false;
        }
        
        //Telefone obrigatório
        if(this.txtTelefone.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Campo endereço e número obrigatórios para cliente!");
            return false;
        }
        
        return true;
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgSexo;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteCliente;
    private javax.swing.JButton btnEditCliente;
    private javax.swing.JButton btnNewCliente;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchClietne;
    private javax.swing.JComboBox<String> cboEstadoCivil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblDataNasc;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlCliente1;
    private javax.swing.JRadioButton rboFeminino;
    private javax.swing.JRadioButton rboMasculino;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtCpfCliente;
    private javax.swing.JFormattedTextField txtCpfSearchCliente;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
